
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<mvc:annotation-driven />
	<context:component-scan base-package="org.arpit.java2blog.controller" />
	<context:component-scan base-package="org.arpit.java2blog.dao" />
	<context:component-scan base-package="org.arpit.java2blog.service" />
	<context:component-scan base-package="org.arpit.java2blog.model" />

	<!-- jdbcTemplate uses dataSource -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="userDao" class="org.arpit.java2blog.dao.UserDaoImpl">
		<property name="dataSource" ref="dataSource" />
		<property name="mailSender" ref="mailSender" />
		<property name="templateMessage" ref="templateMessage" />

	</bean>

	<bean id="rssiService" class="org.arpit.java2blog.service.RssiServiceImpl">
	</bean>

	<!-- dataSource configuration -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/platform_dev" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">

		<property name="host" value="smtp.gmail.com" />
		<property name="username" value="kinjal.patel.dev@gmail.com" />
		<property name="password" value="kinjaldev123" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.socketFactory.port">465</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.smtp.port">465</prop>
			</props>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000" />
	</bean>

	<!-- this is a template message that we can pre-load with default state -->
	<bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="kinjal.patel.dev@gmail.com" />
		<property name="subject" value="Verification Code" />
	</bean>

</beans>

